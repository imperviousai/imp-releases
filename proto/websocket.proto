/// Allows for receiving messages from your IMP node
syntax = 'proto3';

package websocket;

option go_package = "github.com/imperviousai/freeimp/gen";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
		title: "Websocket Services";
		version: "1.0";
		contact: {
			name: "Impervious AI";
			url: "https://impervious.ai";
		};
	};
	external_docs: {
		url: "https://docs.impervious.ai";
		description: "Documentation on IMP";
	}
	schemes: HTTP;
	schemes: HTTPS;
	schemes: WSS;
	consumes: "application/json";
	produces: "application/json";
};

/**
* Websocket service allows for receiving messages received into your Impervious node.
*/
service Websocket {
	/**
	* Subscribe opens up a stream/websocket to receive all messages received on your Impervious node.
	*/
	rpc Subscribe(SubscribeRequest) returns (stream SubscribeResponse) {
		option (google.api.http) = {
			get: "/v1/subscribe"
		};
	}
}

/**
 * Represents a request to subscribe to the event websocket
 */
message SubscribeRequest {

}

/**
 * Represents a response back from the websocket containing event information
 */
message SubscribeResponse {
	string id = 1; // The ID of the message
	string reply_to_id = 2; // Optional ID of the message the sender is replying to
	string from_pubkey = 3; // The node that sent the message
	string data = 4; // The data the node is sending over
	string service_type = 5; // The type of service the message is meant for
	int64 amount = 6; // The amount sent as part of the message
}
